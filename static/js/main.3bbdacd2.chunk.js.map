{"version":3,"sources":["logo.svg","component/card/Card.js","component/card-list/CardList.js","component/search-box/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,wBCaAA,MAVf,YAA4B,IAAZC,EAAW,EAAXA,QACZ,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,eACtB,6BAAMJ,EAAQK,OACd,4BAAKL,EAAQM,YCMVC,MAVf,YAAiC,IAAbC,EAAY,EAAZA,SAChB,OACI,qBAAKP,UAAU,YAAf,SACMO,EAASC,KAAI,SAAAT,GAAO,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,U,MCMpBM,MAXf,YAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC9B,OACI,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,KCsCPG,E,kDAvCX,aAAe,IAAD,8BACV,gBAcJH,aAAe,SAAAI,GACX,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IALP,E,qDASd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAOjD,WAAU,IAAD,EAE6BC,KAAKN,MAA/Bb,EAFH,EAEGA,SAAUU,EAFb,EAEaA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA7B,GAAO,OAC5CA,EAAQK,KAAKyB,cAAcC,SAASb,EAAYY,kBAGpD,OACI,sBAAK7B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIU,YAAY,kBACZC,aAAce,KAAKf,eAEvB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAlClBI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3bbdacd2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './Card.css'\r\n\r\nfunction Card({ monster }) {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${monster.id}?set=set2`} />\r\n            <h2>{ monster.name }</h2>\r\n            <p>{ monster.email }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport './CardList.css'\r\nimport Card from '../card/Card'\r\n\r\nfunction CardList({ monsters }) {\r\n    return (\r\n        <div className=\"card-list\">\r\n            { monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\nimport './SearchBox.css'\r\n\r\nfunction SearchBox({ placeholder, handleChange }) {\r\n    return (\r\n        <input \r\n            className=\"search\"\r\n            type=\"search\" \r\n            placeholder={placeholder} \r\n            onChange={handleChange}  \r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import logo from './logo.svg';\nimport { Component } from 'react';\n\nimport './App.css';\nimport CardList from './component/card-list/CardList'\nimport SearchBox from './component/search-box/SearchBox'\n\nclass App extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            monsters: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ monsters: users }))\n    }\n\n    handleChange = e => {\n        this.setState({ searchField: e.target.value })\n    }\n\n    render() {\n\n        const { monsters, searchField } = this.state\n        const filteredMonsters = monsters.filter(monster =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        )\n\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder=\"search monsters\"\n                    handleChange={this.handleChange}\n                />\n                <CardList monsters={filteredMonsters} />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}